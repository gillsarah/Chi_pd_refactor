geom_point()  +
geom_segment(aes(xend = end, yend = id)) +
scale_x_date(NULL, breaks = presidential$start, date_labels = "'%y")
presidential %>%
mutate(id = 33 + row_number()) %>%
ggplot(aes(start, id)) +
geom_point()  +
geom_segment(aes(xend = end, yend = id))
?scale_x_date
presidential %>%
mutate(id = 33 + row_number()) %>%
ggplot(aes(start, id)) +
geom_point()  +
geom_segment(aes(xend = end, yend = id)) +
scale_x_date(NULL, breaks = presidential$start, date_labels = "'%y")
base <- ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class))
base
base + theme(legend.position = "left")
base + theme(legend.position = "top")
base + theme(legend.position = "bottom")
base + theme(legend.position = "right") # the default
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_smooth(se = FALSE) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1, override.aes = list(size = 4)))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_smooth(se = FALSE, group=class) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1, override.aes = list(size = 4)))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class, group=class)) +
geom_smooth(se = FALSE, group=class) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1, override.aes = list(size = 4)))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class, group=class)) +
geom_smooth(se = FALSE) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1, override.aes = list(size = 4)))
ggplot(mpg, aes(displ, hwy,group=class)) +
geom_point(aes(colour = class)) +
geom_smooth(se = FALSE) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(nrow = 1, override.aes = list(size = 4)))
presidential %>%
mutate(id = 33 + row_number()) %>%
ggplot(aes(start, id, colour = party)) +
geom_point() +
geom_segment(aes(xend = end, yend = id)) +
scale_colour_manual(values = c(Republican = "red", Democratic = "blue"))
df <- tibble(
x = rnorm(10000),
y = rnorm(10000)
)
ggplot(df, aes(x, y)) +
geom_hex() +
coord_fixed()
ggplot(df, aes(x, y)) +
geom_hex() +
viridis::scale_fill_viridis() +
coord_fixed()
ggplot(df, aes(x, y)) +
geom_hex() +
scale_colour_gradient(low = "white", high = "red") +
coord_fixed()
ggplot(df, aes(x, y)) +
geom_hex() +
scale_colour_gradient(low = "white", high = "red")
ggplot(df, aes(x, y)) +
geom_hex() +
scale_colour_manual(low = "white", high = "red") +
coord_fixed()
ggplot(df, aes(x, y)) +
geom_hex()
ggplot(df, aes(x, y)) +
geom_hex() +
scale_colour_manual(low = "white", high = "red")
?scale_colour_gradient
ggplot(df, aes(x, y)) +
geom_hex() +
scale_fill_gradient(low = "white", high = "red") +
coord_fixed()
ggplot(mpg, mapping = aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth() +
coord_cartesian(xlim = c(5, 7), ylim = c(10, 30))
mpg %>%
filter(displ >= 5, displ <= 7, hwy >= 10, hwy <= 30) %>%
ggplot(aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth()
suv <- mpg %>% filter(class == "suv")
compact <- mpg %>% filter(class == "compact")
ggplot(suv, aes(displ, hwy, colour = drv)) +
geom_point()
ggplot(compact, aes(displ, hwy, colour = drv)) +
geom_point()
x_scale <- scale_x_continuous(limits = range(mpg$displ))
y_scale <- scale_y_continuous(limits = range(mpg$hwy))
col_scale <- scale_colour_discrete(limits = unique(mpg$drv))
ggplot(suv, aes(displ, hwy, colour = drv)) +
geom_point() +
x_scale +
y_scale +
col_scale
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_bw()
ggplot(mpg, aes(displ, hwy)) + geom_point()
library(pryr)
environment()
search()
ls(all.names = T)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
traceback()
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
function(d) "a" + d
f <- function(a) g(a)
g <- function(b) h(b)
h <- function(c) i(c)
i <- function(d) "a" + d
f(10)
function(d) "a" + d
col_means <- function(df) {
numeric <- sapply(df, is.numeric)
numeric_cols <- df[, numeric]
data.frame(lapply(numeric_cols, mean))
}
col_means()
col_means(mtcars)
col_means(mtcars[, 0])
col_means(mtcars[o, ])
col_means(mtcars[0, ])
col_means(mtcars[, "mpg", drop = F])
col_means(as.matrix(mtcars))
col_means(as.list(mtcars))
mtcars2 <- mtcars
mtcars2[-1] <- lapply(mtcars2[-1], as.character)
col_means(mtcars2)
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
sample(c(1:10, -99)
)
c(1:10, -99)
sample(c(1:10, -99), 6, rep = TRUE)
sample(c(1:10, -99), 6, rep = TRUE)
replicate(6, sample(c(1:10, -99), 6, rep = TRUE))
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
df[1:5]
df[1:5,]
df[,1:5]
lapply(df, print)
integrate(function(x) sin(x) ^ 2, 0, pi)
?integrate
integrate
formals(function(x = 4) g(x) + h(x))
body(function(x = 4) g(x) + h(x))
(function(x) 3)()
(function(x) x * 2)(10)
(function(x) mean(x))(1:5)
(function(x) sum(x - mean(x)))(1:5)
(function(x) sum(x^2 - mean(x)^2))(1:5)
(function(x) sqrt(sum(x^2 - mean(x)^2)))(1:5)
var(1:5)
(function(x) sqrt(sum(x - mean(x)^2)^2))(1:5)
(function(x) sqrt(sum((x - mean(x)^2)^2)))(1:5)
(function(x) (x - mean(x))(1:5)
)
(function(x) (x - mean(x)))(1:5)
1:5
mean(1:5)
var(1:5)
(function(x) (x^2 - mean(x)^2))(1:5)
(function(x) sum((x^2 - mean(x)^2)))(1:5)
(function(x) sqrt(sum((x^2 - mean(x)^2))))(1:5)
var(1:5)
1:5
c(1,2,3,4,5)
var(c(1,2,3,4,5))
(function(x) mean(x^2 - mean(x)^2))(1:5)
(function(x) mean((x - mean(x))^2))(1:5)
(function(x) x - mean(x))(1:5)
((function(x) x - mean(x))(1:5))^2
mean(((function(x) x - mean(x))(1:5))^2)
?var
var(1:5)
mean(1:5)
1:5 - mean(1:5)
(1:5 - mean(1:5))^2
sum((1:5 - mean(1:5))^2)
mean((1:5 - mean(1:5))^2)
(1:5 - mean(1:5))^2)
(1:5 - mean(1:5))^2
sum((1:5 - mean(1:5))^2)/4
var(1:5)
(function(x) 3)()
as.list(environment(square))
as.list(environment(`^`))
as.list(environment(`^`))
as.list(environment("^"))
library(pryr)
new_counter <- function() {
i <- 0
function() {
i <<- i + 1
i
}
}
counter_one <- new_counter()
counter_one()
counter_one()
counter_one()
counter_one <- new_counter()
counter_one()
counter_one()()
(counter_one())()
(new_counter())()
(new_counter())()
(new_counter())()
((new_counter())())()
((new_counter())()())
(new_counter())()()
(new_counter())()
(new_counter())()
nc <- (new_counter())()
nc
nc
nc
nc <- (new_counter())
nc
nc
nc <- new_counter()
nc
nc
nc
new_counter()
new_counter()
counter_one()
counter_one()
nc <- new_counter()
nc
nc
nc
> new_counter <- function() {
+     i <- 0
+     function() {
+         i <<- i + 1
+         i
+     }
+ }
i <- 0
new_counter2 <- function() {
i <<- i + 1
i
}
new_counter3 <- function() {
i <- 0
function() {
i <- i + 1
i
}
}
new_counter3()
new_counter3
new_counter3()()
new_counter3()()
new_counter3()()
bc <- function(lambda) {
if (lambda == 0) {
function(x) log(x)
} else {
function(x) (x ^ lambda - 1) / lambda
}
}
bc(10)
bc <- function(lambda) {
if (lambda == 0) {
function(x) log(x)
} else {
function(x) (x ^ lambda - 1) / lambda
}
}
bc(10)
bc(10)(10)
bc()(10)
bc(2)(10)
bc(1)
bc(1)(10)
simple_tag <- function(tag) {
force(tag)
function(...) {
paste0("<", tag, ">", paste0(...), "</", tag, ">")
}
}
tags <- c("p", "b", "i")
html <- lapply(setNames(tags, tags), simple_tag)
html$p("This is ", html$b("bold"), " text.")
lapply(mtcars, class)
trims <- c(0, 0.1, 0.2, 0.5)
x <- rcauchy(1000)
unlist(lapply(trims, function(trim) mean(x, trim = trim)))
?mean
mtmeans <- lapply(mtcars, mean)
mtmeans[] <- Map(`/`, mtcars, mtmeans)
mtmeans
mtmeans <- lapply(mtcars, mean)
mtmeans
mtmeans <- lapply(mtcars, mean)
mtmeans[] <- Map(`/`, mtcars, mtmeans)
rollmean <- function(x, n) {
out <- rep(NA, length(x))
offset <- trunc(n / 2)
for (i in (offset + 1):(length(x) - n + offset + 1)) {
out[i] <- mean(x[(i - offset):(i + offset - 1)])
}
out
}
x <- seq(1, 3, length = 1e2) + runif(1e2)
plot(x)
lines(rollmean(x, 5), col = "blue", lwd = 2)
lines(rollmean(x, 10), col = "red", lwd = 2)
x <- seq(1, 3, length = 1e2) + rt(1e2, df = 2) / 3
plot(x)
lines(rollmean(x, 5), col = "red", lwd = 2)
rollapply <- function(x, n, f, ...) {
out <- rep(NA, length(x))
offset <- trunc(n / 2)
for (i in (offset + 1):(length(x) - n + offset + 1)) {
out[i] <- f(x[(i - offset):(i + offset - 1)], ...)
}
out
}
plot(x)
lines(rollapply(x, 5, median), col = "red", lwd = 2)
rollapply <- function(x, n, f, ...) {
offset <- trunc(n / 2)
locs <- (offset + 1):(length(x) - n + offset + 1)
num <- vapply(
locs,
function(i) f(x[(i - offset):(i + offset)], ...),
numeric(1)
)
c(rep(NA, offset), num)
}
lapply3 <- function(x, f, ...) {
out <- vector("list", length(x))
for (i in sample(seq_along(x))) {
out[[i]] <- f(x[[i]], ...)
}
out
}
unlist(lapply(1:10, sqrt))
library(parallel)
unlist(mclapply(1:10, sqrt, mc.cores = 4))
boot_df <- function(x) x[sample(nrow(x), rep = T), ]
rsquared <- function(mod) summary(mod)$r.square
boot_lm <- function(i) {
rsquared(lm(mpg ~ wt + disp, data = boot_df(mtcars)))
}
system.time(lapply(1:500, boot_lm))
system.time(mclapply(1:500, boot_lm, mc.cores = 2))
a <- matrix(1:20, nrow = 5)
apply(a, 1, mean)
apply(a, 2, mean)
x <- matrix(rnorm(20, 0, 10), nrow = 4)
x1 <- sweep(x, 1, apply(x, 1, min), `-`)
x2 <- sweep(x1, 1, apply(x1, 1, max), `/`)
x
x1
apply(x, 1, min)
x[1]
x[1,]
x[1,] - apply(x, 1, min)
x[1,]
apply(x, 1, min)
chatty <- function(f) {
function(x, ...) {
res <- f(x, ...)
cat("Processing ", x, "\n", sep = "")
res
}
}
f <- function(x) x ^ 2
s <- c(3, 2, 1)
chatty(f)
chatty(f)(1)
chatty(f)(1)(3)
chatty(f)(1)(s)
vapply(s, chatty(f), numeric(1))
vapply(s, chatty(f))
vapply(s, chatty(f), numeric(1))
?vapply
x <- seq(0, 2 * pi, length = 100)
sinx <- sin(x)
plot(x, sinx, type = "l")
?substitute
substitute(a >= 4)
x <- quote(read.csv("important.csv", row.names = FALSE))
x
x[[1]]
x[[2]]
is.name(x[[1]])
call("mean", quote(1:10), na.rm = TRUE)
eval(call("mean", quote(1:10), na.rm = TRUE))
install.packages("microbenchmark")
library(microbenchmark)
microbenchmark(
"[32, 11]"      = mtcars[32, 11],
"$carb[32]"     = mtcars$carb[32],
"[[c(11, 32)]]" = mtcars[[c(11, 32)]],
"[[11]][32]"    = mtcars[[11]][32],
".subset2"      = .subset2(mtcars, 11)[32]
)
microbenchmark(
"[32, 11]"      = mtcars[32, 11],
"$carb[32]"     = mtcars$carb[32],
"[[c(11, 32)]]" = mtcars[[c(11, 32)]],
"[[11]][32]"    = mtcars[[11]][32],
".subset"      = .subset(mtcars, 11)[32]
)
library(readr)
df <- read_csv("Dropbox (Invisible Institute)/Data/Roman/Github/chicago-police-data/full-output/profiles/officer-reference.csv.gz")
hist(df$star)
hist(df[df$star < 1000,]$star)
hist(df[df$star < 1000,]$star, bins=1000)
hist(df[df$star < 1000,]$star, breaks=1000)
hist(df[df$star < 100,]$star, breaks=100)
hist(df[df$star < 50,]$star, breaks=50)
data(swiss)
View(swiss)
hist(swiss$Fertility)
hist(swiss$Agriculture)
hist(swiss$Examination)
hist(swiss$Fertility)
mean(swiss$Fertility)
var(swiss)
lappl(swiss, var)
lapply(swiss, var)
lapply(swiss, sqrt(var()))
lapply(swiss, function(x) sqrt(var(x)))
lapply(swiss, sd))
lapply(swiss, sd)
setwd("~/Dropbox (Invisible Institute)/Data/Roman/Github/chicago-police-data/full-output/TRR")
library(tidyverse)
main <- read_csv("TRR-main_2004-2016_2016-09.csv.gz")
main <- read_csv("TRR-actions-responses_2004-2016_2016-09.csv.gz")
main <- read_csv("TRR-main_2004-2016_2016-09.csv.gz")
ar <- read_csv("TRR-actions-responses_2004-2016_2016-09.csv.gz")
ar %>% filter(force_type == 'DEADLY FORCE')
table(ar$force_type)
ar %>% filter(force_type == 'Firearm')
main %>% head()
main %>% select(trr_id, firearm, taser, number_of_weapons_discharged, total_number_of_shots)
main %>% select(trr_id, firearm, taser, number_of_weapons_discharged, total_number_of_shots, number_of_officers_shooting) %>% filter(firearm | taser | !is.na(number_of_weapons_discharged) | !is.na(total_number_of_shots) | !is.na(number_of_officers_shooting))
main %>% select(trr_id, firearm, taser, number_of_weapons_discharged, total_number_of_shots, number_of_officers_shooting) %>% filter(firearm=='True' | taser=='True' | !is.na(number_of_weapons_discharged) | !is.na(total_number_of_shots) | !is.na(number_of_officers_shooting))
ar %>% filter(trr_id == 94)
tst <- main %>% select(trr_id, firearm, taser, number_of_weapons_discharged, total_number_of_shots, number_of_officers_shooting) %>% filter(firearm=='True' | taser=='True' | !is.na(number_of_weapons_discharged) | !is.na(total_number_of_shots) | !is.na(number_of_officers_shooting))
tst %>% filter(firearm == 'True')
tst %>% filter(firearm == 'True' & (!is.na(total_number_of_shots) | total_number_of_shots < 1))
tst %>% filter(firearm == 'True' & (is.na(total_number_of_shots) | total_number_of_shots < 1))
ar %>% filter(trr_id==90265)
wd <- read_csv("TRR-weapon-discharges_2004-2016_2016-09.csv.gz")
wd %>% filter(trr_id==90265)
ar %>% filter(trr_id==90265) %>% select(action)
main %>% filter(trr_id==90265)
main %>% filter(trr_id==90265) %>% as.list()
